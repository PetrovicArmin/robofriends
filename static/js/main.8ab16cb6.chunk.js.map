{"version":3,"sources":["Components/Card.js","Components/cardList.js","Components/searchBox.js","Components/errorBoundry.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","react_default","a","createElement","react","className","alt","src","concat","this","props","id","name","email","Component","CardList","array","map","u","username","Components_Card","key","SearchBox","type","placeholder","onChange","onChangeMethod","ErrorBoundry","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","errorHappened","setState","children","Scroll","style","overflow","border","height","App","event","searchText","target","value","robots","_this2","fetch","then","result","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","searchBox","Components_Scroll","errorBoundry","cardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"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","file":"static/js/main.8ab16cb6.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nclass Card extends Component {\n    render() {\n        return (\n            <Fragment>\n            \t<div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            \t\t<img alt=\"robot\" src={`https://robohash.org/${this.props.id}?200x200`}/>\n            \t\t<div>\n            \t\t\t<h2>{this.props.name}</h2>\n            \t\t\t<p>{this.props.email}</p>\n            \t\t</div>\n            \t</div>\n            </Fragment>\n        );\n    }\n}\n\n\nexport default Card;\n","import React, { Component, Fragment } from 'react';\nimport Card from './Card';\n\nclass CardList extends Component {\n    render() {\n        return (\n            <Fragment>\n            {\n            \tthis.props.array.map(u => {\n\t\t\t\t\tconst { id, name, username, email } = u;        \t\t\n            \t\treturn <Card \n            \t\t\tkey={id}\n            \t\t\tid={id} \n            \t\t\tname={name} \n            \t\t\tusername={username} \n            \t\t\temail={email}\n            \t\t/>;\n            \t})\n            }\n            </Fragment>\n        );\n    }\n}\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nclass SearchBox extends Component {\n    render() {\n        return (\n            <input \n            \tclassName=\"pa3 ba b--green bg-lightest-blue\"\n            \ttype=\"search\" \n            \tplaceholder=\"Search your robots\"\n            \tonChange={this.props.onChangeMethod}\n            />\n        );\n    }\n}\n\nexport default SearchBox;\n","import React, { Component, Fragment } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \terrorHappened: false\n        };\n    }\n\n    componentDidCatch() {\n    \tthis.setState({ errorHappened: true });\n    }\n\n    render() {\n    \tif (this.state.errorHappened)\n    \t\treturn <h1>This is not good, oops!</h1>;\n    \treturn <Fragment>{this.props.children}</Fragment>;\n    }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\n\nclass Scroll extends Component {\n    render() {\n        return (\n        \t<div style={ {overflow: 'scroll', border: '5px solid black', height: '800px'} }>\n        \t\t{ this.props.children }\n        \t</div>\n        );\n    }\n}\n\nexport default Scroll;\n","import React, { Component } from 'react';\nimport CardList from '../Components/cardList.js';\nimport SearchBox from '../Components/searchBox';\nimport ErrorBoundry from '../Components/errorBoundry';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \trobots: [],\n        \tsearchText: ''\n        };\n    }\n\n    componentDidMount() {\n    \tfetch(\"https://jsonplaceholder.typicode.com/users/\")\n    \t\t.then(result => result.json())\n        \t.then(users => this.setState({ robots: users }));\n    }\n\n    onChangeMethod = (event) => {    \n    \tthis.setState({ \n    \t\tsearchText: event.target.value\n    \t});\n    } \n\n    render() {\n    \tconst filteredRobots = this.state.robots.filter(robot => {\n    \t\treturn robot.name.toLowerCase().includes(this.state.searchText.toLowerCase());\n    \t});\n\n    \tif (this.state.robots.length === 0) {\n    \t\treturn <h1>Loading...</h1>\n    \t}\n\n        return (\n            <div className=\"tc\">\n            \t<div>\n\t            \t<h1 className=\"f1\">Robofriends</h1>\n\t            \t<SearchBox onChangeMethod={this.onChangeMethod}/>\n            \t</div>\n            \t<Scroll>\n                    <ErrorBoundry>\n            \t\t     <CardList array={filteredRobots}/>\n                    </ErrorBoundry>\n            \t</Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'tachyons';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n\t<React.StrictMode>\n      \t<App/>\n  \t</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}